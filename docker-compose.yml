services:
    client:
        build:
            context: ./client-service
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            - frontend_network
        ports:
            - "8081:8081"
        depends_on:
            - gateway

    gateway:
        build:
            context: ./gateway-service
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            - frontend_network
            - backend_network
        depends_on:
            - patient
            - note
            - risk-report

    patient:
        build:
            context: ./patient-service
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            - backend_network
        depends_on:
            - patient-db
        env_file: .env
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://patient-db:5432/${POSTGRES_DB}
            - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
            - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

    patient-db:
        image: postgres:16
        restart: unless-stopped
        networks:
            - backend_network
        env_file: .env
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data

    note:
        build:
            context: ./note-service
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            - backend_network
        depends_on:
            - note-db
        environment:
            - SPRING_DATA_MONGODB_HOST=note-db
            - SPRING_DATA_MONGODB_PORT=27017
            - SPRING_DATA_MONGODB_DATABASE=medilabo

    note-db:
        image: mongo:7
        restart: unless-stopped
        networks:
            - backend_network
        volumes:
            - mongo_data:/data/db
        environment:
            MONGO_INITDB_DATABASE: medilabo

    risk-report:
        build:
            context: ./risk-report-service
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            - backend_network
        depends_on:
            - patient
            - note

volumes:
    postgres_data:
    mongo_data:

networks:
    frontend_network:
    backend_network: